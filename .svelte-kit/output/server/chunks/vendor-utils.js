import{twMerge as ee,extendTailwindMerge as re}from"tailwind-merge";var te=/\s+/g,R=e=>typeof e!="string"||!e?e:e.replace(te," ").trim(),N=(...e)=>{let l=[],t=r=>{if(!r&&r!==0&&r!==0n)return;if(Array.isArray(r)){for(let c=0,j=r.length;c<j;c++)t(r[c]);return}let n=typeof r;if(n==="string"||n==="number"||n==="bigint"){if(n==="number"&&r!==r)return;l.push(String(r))}else if(n==="object"){let c=Object.keys(r);for(let j=0,x=c.length;j<x;j++){let A=c[j];r[A]&&l.push(A)}}};for(let r=0,n=e.length;r<n;r++){let c=e[r];c!=null&&t(c)}return l.length>0?R(l.join(" ")):void 0},U=e=>e===!1?"false":e===!0?"true":e===0?"0":e,h=e=>{if(!e||typeof e!="object")return!0;for(let l in e)return!1;return!0},ne=(e,l)=>{if(e===l)return!0;if(!e||!l)return!1;let t=Object.keys(e),r=Object.keys(l);if(t.length!==r.length)return!1;for(let n=0;n<t.length;n++){let c=t[n];if(!r.includes(c)||e[c]!==l[c])return!1}return!0},W=(e,l)=>{for(let t in l)if(Object.prototype.hasOwnProperty.call(l,t)){let r=l[t];t in e?e[t]=N(e[t],r):e[t]=r}return e},X=(e,l)=>{for(let t=0;t<e.length;t++){let r=e[t];Array.isArray(r)?X(r,l):r&&l.push(r)}},Y=(...e)=>{let l=[];X(e,l);let t=[];for(let r=0;r<l.length;r++)l[r]&&t.push(l[r]);return t},q=(e,l)=>{let t={};for(let r in e){let n=e[r];if(r in l){let c=l[r];Array.isArray(n)||Array.isArray(c)?t[r]=Y(c,n):typeof n=="object"&&typeof c=="object"&&n&&c?t[r]=q(n,c):t[r]=c+" "+n}else t[r]=n}for(let r in l)r in e||(t[r]=l[r]);return t},le={twMerge:!0,twMergeConfig:{},responsiveVariants:!1};function se(){let e=null,l={},t=!1;return{get cachedTwMerge(){return e},set cachedTwMerge(r){e=r},get cachedTwMergeConfig(){return l},set cachedTwMergeConfig(r){l=r},get didTwMergeConfigChange(){return t},set didTwMergeConfigChange(r){t=r},reset(){e=null,l={},t=!1}}}var C=se(),ie=e=>{let l=(t,r)=>{let{extend:n=null,slots:c={},variants:j={},compoundVariants:x=[],compoundSlots:A=[],defaultVariants:z={}}=t,b={...le,...r},S=n?.base?N(n.base,t?.base):t?.base,v=n?.variants&&!h(n.variants)?q(j,n.variants):j,E=n?.defaultVariants&&!h(n.defaultVariants)?{...n.defaultVariants,...z}:z;!h(b.twMergeConfig)&&!ne(b.twMergeConfig,C.cachedTwMergeConfig)&&(C.didTwMergeConfigChange=!0,C.cachedTwMergeConfig=b.twMergeConfig);let G=h(n?.slots),K=h(c)?{}:{base:N(t?.base,G&&n?.base),...c},O=G?K:W({...n?.slots},h(K)?{base:t?.base}:K),k=h(n?.compoundVariants)?x:Y(n?.compoundVariants,x),M=m=>{if(h(v)&&h(c)&&G)return e(S,m?.class,m?.className)(b);if(k&&!Array.isArray(k))throw new TypeError(`The "compoundVariants" prop must be an array. Received: ${typeof k}`);if(A&&!Array.isArray(A))throw new TypeError(`The "compoundSlots" prop must be an array. Received: ${typeof A}`);let _=(a,s,o=[],u)=>{let f=o;if(typeof s=="string"){let i=R(s).split(" ");for(let g=0;g<i.length;g++)f.push(`${a}:${i[g]}`)}else if(Array.isArray(s))for(let i=0;i<s.length;i++)f.push(`${a}:${s[i]}`);else if(typeof s=="object"&&typeof u=="string"&&u in s){let i=s[u];if(i&&typeof i=="string"){let g=R(i).split(" "),d=[];for(let y=0;y<g.length;y++)d.push(`${a}:${g[y]}`);f[u]=f[u]?f[u].concat(d):d}else if(Array.isArray(i)&&i.length>0){let g=[];for(let d=0;d<i.length;d++)g.push(`${a}:${i[d]}`);f[u]=g}}return f},D=(a,s=v,o=null,u=null)=>{let f=s[a];if(!f||h(f))return null;let i=u?.[a]??m?.[a];if(i===null)return null;let g=U(i),d=Array.isArray(b.responsiveVariants)&&b.responsiveVariants.length>0||b.responsiveVariants===!0,y=E?.[a],p=[];if(typeof g=="object"&&d)for(let[V,Q]of Object.entries(g)){let $=f[Q];if(V==="initial"){y=Q;continue}Array.isArray(b.responsiveVariants)&&!b.responsiveVariants.includes(V)||(p=_(V,$,p,o))}let T=g!=null&&typeof g!="object"?g:U(y),w=f[T||"false"];return typeof p=="object"&&typeof o=="string"&&p[o]?W(p,w):p.length>0?(p.push(w),o==="base"?p.join(" "):p):w},B=()=>{if(!v)return null;let a=Object.keys(v),s=[];for(let o=0;o<a.length;o++){let u=D(a[o],v);u&&s.push(u)}return s},F=(a,s)=>{if(!v||typeof v!="object")return null;let o=[];for(let u in v){let f=D(u,v,a,s),i=a==="base"&&typeof f=="string"?f:f&&f[a];i&&o.push(i)}return o},H={};for(let a in m){let s=m[a];s!==void 0&&(H[a]=s)}let L=(a,s)=>{let o=typeof m?.[a]=="object"?{[a]:m[a]?.initial}:{};return{...E,...H,...o,...s}},P=(a=[],s)=>{let o=[],u=a.length;for(let f=0;f<u;f++){let{class:i,className:g,...d}=a[f],y=!0,p=L(null,s);for(let T in d){let w=d[T],V=p[T];if(Array.isArray(w)){if(!w.includes(V)){y=!1;break}}else{if((w==null||w===!1)&&(V==null||V===!1))continue;if(V!==w){y=!1;break}}}y&&(i&&o.push(i),g&&o.push(g))}return o},I=a=>{let s=P(k,a);if(!Array.isArray(s))return s;let o={},u=e;for(let f=0;f<s.length;f++){let i=s[f];if(typeof i=="string")o.base=u(o.base,i)(b);else if(typeof i=="object")for(let g in i)o[g]=u(o[g],i[g])(b)}return o},J=a=>{if(A.length<1)return null;let s={},o=L(null,a);for(let u=0;u<A.length;u++){let{slots:f=[],class:i,className:g,...d}=A[u];if(!h(d)){let y=!0;for(let p in d){let T=o[p],w=d[p];if(T===void 0||(Array.isArray(w)?!w.includes(T):w!==T)){y=!1;break}}if(!y)continue}for(let y=0;y<f.length;y++){let p=f[y];s[p]||(s[p]=[]),s[p].push([i,g])}}return s};if(!h(c)||!G){let a={};if(typeof O=="object"&&!h(O)){let s=e;for(let o in O)a[o]=u=>{let f=I(u),i=J(u);return s(O[o],F(o,u),f?f[o]:void 0,i?i[o]:void 0,u?.class,u?.className)(b)}}return a}return e(S,B(),P(k),m?.class,m?.className)(b)},Z=()=>{if(!(!v||typeof v!="object"))return Object.keys(v)};return M.variantKeys=Z(),M.extend=n,M.base=S,M.slots=O,M.variants=v,M.defaultVariants=E,M.compoundSlots=A,M.compoundVariants=k,M};return{tv:l,createTV:t=>(r,n)=>l(r,n?q(t,n):t)}},ae=e=>h(e)?ee:re({...e,extend:{theme:e.theme,classGroups:e.classGroups,conflictingClassGroupModifiers:e.conflictingClassGroupModifiers,conflictingClassGroups:e.conflictingClassGroups,...e.extend}}),oe=(...e)=>l=>{let t=N(e);return!t||!l.twMerge?t:((!C.cachedTwMerge||C.didTwMergeConfigChange)&&(C.didTwMergeConfigChange=!1,C.cachedTwMerge=ae(C.cachedTwMergeConfig)),C.cachedTwMerge(t)||void 0)},{tv:ue}=ie(oe);export{ue as T};
