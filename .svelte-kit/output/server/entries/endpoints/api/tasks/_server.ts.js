import{json as a}from"@sveltejs/kit";let d=[{id:1,title:"Order bamboo muzzle prop",description:"Find and order the bamboo muzzle for Nezuko cosplay",completed:!1,projectId:1,dueDate:new Date("2025-11-15"),priority:"high"},{id:2,title:"Sew kimono sleeves",description:"Complete the kimono sleeves with proper measurements",completed:!0,projectId:1,priority:"medium"},{id:3,title:"Style wig",description:"Cut and style the white wig for Gojo",completed:!1,projectId:3,dueDate:new Date("2025-12-01"),priority:"medium"}];const l=async({url:o})=>{try{await new Promise(s=>setTimeout(s,80));const e=o.searchParams.get("projectId"),r=o.searchParams.get("completed"),i=o.searchParams.get("priority");let t=d;if(e){const s=parseInt(e);isNaN(s)||(t=t.filter(c=>c.projectId===s))}if(r!==null){const s=r==="true";t=t.filter(c=>c.completed===s)}i&&i!=="all"&&(t=t.filter(s=>s.priority===i));const n={data:t,success:!0,message:`Retrieved ${t.length} tasks`};return a(n)}catch{return a({data:[],success:!1,message:"Failed to fetch tasks"},{status:500})}},m=async({request:o})=>{try{const e=await o.json();if(!e.title)return a({data:{},success:!1,message:"Missing required field: title"},{status:400});const r={id:Math.max(...d.map(t=>t.id),0)+1,title:e.title,description:e.description,completed:e.completed||!1,projectId:e.projectId,dueDate:e.dueDate?new Date(e.dueDate):void 0,priority:e.priority||"medium"};return d.push(r),a({data:r,success:!0,message:"Task created successfully"},{status:201})}catch{return a({data:{},success:!1,message:"Failed to create task"},{status:500})}};export{l as GET,m as POST};
