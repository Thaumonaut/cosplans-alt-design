import{get_request_store as v,with_request_store as R}from"@sveltejs/kit/internal/server";import{error as j,json as F}from"@sveltejs/kit";import{j as $,k as U,h as J,f as x}from"./chunks/shared.js";import{D as N}from"./chunks/vendor-ui.js";import{b as V,c as H,p as A}from"./chunks/environment.js";function E(n,t){if(!t)return e=>{e!==void 0&&j(400,"Bad Request")};if(n==="unchecked")return e=>e;if("~standard"in n)return async e=>{const{event:s,state:r}=v(),o=n["~standard"].validate,a=await o(e);return a.issues&&j(400,await r.handleValidationError({issues:a.issues,event:s})),a.value};throw new Error('Invalid validator passed to remote function. Expected "unchecked" or a Standard Schema (https://standardschema.dev)')}async function O(n,t,e,s){await 0;const r=_(n,e);return r[$(t,e.transport)]??=s()}function B(n,t){const e={};for(const s in t)e[s]=t[s].decode;return U(n,e)}async function P(n,t,e,s,r,o){const a={event:{...n,setHeaders:()=>{throw new Error("setHeaders is not allowed in remote functions")},cookies:{...n.cookies,set:(m,u,i)=>{if(!e)throw new Error("Cannot set cookies in `query` or `prerender` functions");if(i.path&&!i.path.startsWith("/"))throw new Error("Cookies set in remote functions must have an absolute path");return n.cookies.set(m,u,i)},delete:(m,u)=>{if(!e)throw new Error("Cannot delete cookies in `query` or `prerender` functions");if(u.path&&!u.path.startsWith("/"))throw new Error("Cookies deleted in remote functions must have an absolute path");return n.cookies.delete(m,u)}}},state:{...t,is_in_remote_function:!0}},f=await R(a,()=>r(s));return R(a,()=>o(f))}function _(n,t=v().state){let e=t.remote_data?.get(n);return e===void 0&&(e={},(t.remote_data??=new Map).set(n,e)),e}function ce(n,t){const e=t??n,s=E(n,t),r={type:"command",id:"",name:""},o=a=>{const{event:f,state:m}=v();if(m.is_endpoint_request){if(!["POST","PUT","PATCH","DELETE"].includes(f.request.method))throw new Error(`Cannot call a command (\`${r.name}(${t?"...":""})\`) from a ${f.request.method} handler`)}else if(!f.isRemoteRequest)throw new Error(`Cannot call a command (\`${r.name}(${t?"...":""})\`) during server-side rendering`);m.refreshes??={};const u=Promise.resolve(P(f,m,!0,a,s,e));return u.updates=()=>{throw new Error(`Cannot call '${r.name}(...).updates(...)' on the server`)},u};return Object.defineProperty(o,"__",{value:r}),Object.defineProperty(o,"pending",{get:()=>0}),o}function I(n,t,e){t.startsWith("n:")?(t=t.slice(2),e=e===""?void 0:parseFloat(e)):t.startsWith("b:")&&(t=t.slice(2),e=e==="on"),W(n,G(t),e)}function M(n){const t={};for(let e of n.keys()){if(e.startsWith("sveltekit:"))continue;const s=e.endsWith("[]");let r=n.getAll(e);if(s&&(e=e.slice(0,-2)),r.length>1&&!s)throw new Error(`Form cannot contain duplicated keys â€” "${e}" has ${r.length} values`);r=r.filter(o=>typeof o=="string"||o.name!==""||o.size>0),e.startsWith("n:")?(e=e.slice(2),r=r.map(o=>o===""?void 0:parseFloat(o))):e.startsWith("b:")&&(e=e.slice(2),r=r.map(o=>o==="on")),I(t,e,s?r:r[0])}return t}const Z=/^[a-zA-Z_$]\w*(\.[a-zA-Z_$]\w*|\[\d+\])*$/;function G(n){if(!Z.test(n))throw new Error(`Invalid path ${n}`);return n.split(/\.|\[|\]/).filter(Boolean)}function S(n){if(n==="__proto__"||n==="constructor"||n==="prototype")throw new Error(`Invalid key "${n}"`)}function W(n,t,e){let s=n;for(let o=0;o<t.length-1;o+=1){const a=t[o];S(a);const f=/^\d+$/.test(t[o+1]),m=a in s,u=s[a];if(m&&f!==Array.isArray(u))throw new Error(`Invalid array key ${t[o+1]}`);m||(s[a]=f?[]:{}),s=s[a]}const r=t[t.length-1];S(r),s[r]=e}function K(n,t=!1){const e={name:"",path:[],message:n.message,server:t};if(n.path!==void 0){let s="";for(const r of n.path){const o=typeof r=="object"?r.key:r;e.path.push(o),typeof o=="number"?s+=`[${o}]`:typeof o=="string"&&(s+=s===""?o:"."+o)}e.name=s}return e}function Q(n){const t={};for(const e of n){(t.$??=[]).push(e);let s="";if(e.path!==void 0)for(const r of e.path)typeof r=="number"?s+=`[${r}]`:typeof r=="string"&&(s+=s===""?r:"."+r),(t[s]??=[]).push(e)}return t}function X(n,t){let e=n;for(const s of t){if(e==null||typeof e!="object")return e;e=e[s]}return e}function g(n,t,e,s,r=[]){const o=()=>X(t(),r);return new Proxy(n,{get(a,f){if(typeof f=="symbol")return a[f];if(/^\d+$/.test(f))return g({},t,e,s,[...r,parseInt(f,10)]);const m=Y(r);return f==="set"?g(function(i){return e(r,i),i},t,e,s,[...r,f]):f==="value"?g(o,t,e,s,[...r,f]):f==="issues"||f==="allIssues"?g(()=>{const i=s()[m===""?"$":m];return f==="allIssues"?i?.map(l=>({message:l.message})):i?.filter(l=>l.name===m)?.map(l=>({message:l.message}))},t,e,s,[...r,f]):f==="as"?g((i,l)=>{const c=i==="file multiple"||i==="select multiple"||i==="checkbox"&&typeof l=="string",p={name:(i==="number"||i==="range"?"n:":i==="checkbox"&&!c?"b:":"")+m+(c?"[]":""),get"aria-invalid"(){const d=s();return m in d?"true":void 0}};return i!=="text"&&i!=="select"&&i!=="select multiple"&&(p.type=i==="file multiple"?"file":i),i==="submit"||i==="hidden"?Object.defineProperties(p,{value:{value:l,enumerable:!0}}):i==="select"||i==="select multiple"?Object.defineProperties(p,{multiple:{value:c,enumerable:!0},value:{enumerable:!0,get(){return o()}}}):i==="checkbox"||i==="radio"?Object.defineProperties(p,{value:{value:l??"on",enumerable:!0},checked:{enumerable:!0,get(){const d=o();return i==="radio"?d===l:c?(d??[]).includes(l):d}}}):i==="file"||i==="file multiple"?Object.defineProperties(p,{multiple:{value:c,enumerable:!0},files:{enumerable:!0,get(){const d=o();if(d instanceof File){if(typeof DataTransfer<"u"){const y=new DataTransfer;return y.items.add(d),y.files}return{0:d,length:1}}if(Array.isArray(d)&&d.every(y=>y instanceof File)){if(typeof DataTransfer<"u"){const w=new DataTransfer;return d.forEach(b=>w.items.add(b)),w.files}const y={length:d.length};return d.forEach((w,b)=>{y[b]=w}),y}return null}}}):Object.defineProperties(p,{value:{enumerable:!0,get(){const d=o();return d!=null?String(d):""}}})},t,e,s,[...r,"as"]):g({},t,e,s,[...r,f])}})}function Y(n){let t="";for(const e of n)typeof e=="number"?t+=`[${e}]`:t+=t===""?e:"."+e;return t}function ue(n,t){const e=t??n,s=!t||n==="unchecked"?null:n;function r(o){const a={};a.method="POST",Object.defineProperty(a,"enhance",{value:()=>({action:a.action,method:a.method})});const f={type:"submit",onclick:()=>{}};Object.defineProperty(f,"enhance",{value:()=>({type:"submit",formaction:a.buttonProps.formaction,onclick:()=>{}})}),Object.defineProperty(a,"buttonProps",{value:f});const m={type:"form",name:"",id:"",fn:async u=>{const i=u.get("sveltekit:validate_only")==="true";let l=t?M(u):void 0;if(l&&l.id===void 0){const y=u.get("sveltekit:id");typeof y=="string"&&(l.id=JSON.parse(y))}const c={};c.submission=!0;const{event:h,state:p}=v(),d=await s?.["~standard"].validate(l);if(i)return d?.issues??[];if(d?.issues!==void 0)T(c,d.issues,h.isRemoteRequest,u);else{d!==void 0&&(l=d.value),p.refreshes??={};const y=ee();try{c.result=await P(h,p,!0,l,w=>w,w=>t?e(w,y):e(y))}catch(w){if(w instanceof D)T(c,w.issues,h.isRemoteRequest,u);else throw w}}return h.isRemoteRequest||(_(m,p)[""]??=c),c}};return Object.defineProperty(a,"__",{value:m}),Object.defineProperty(a,"action",{get:()=>`?/remote=${m.id}`,enumerable:!0}),Object.defineProperty(f,"formaction",{get:()=>`?/remote=${m.id}`,enumerable:!0}),Object.defineProperty(a,"fields",{get(){const u=_(m)?.[""],i=Q(u?.issues??[]);return g({},()=>u?.input??{},(l,c)=>{if(u?.submission)return;const h=l.length===0?c:W(u?.input??{},l.map(String),c);(_(m)[""]??={}).input=h},()=>i)}}),Object.defineProperty(a,"result",{get(){try{return _(m)?.[""]?.result}catch{return}}}),Object.defineProperty(a,"pending",{get:()=>0}),Object.defineProperty(f,"pending",{get:()=>0}),Object.defineProperty(a,"preflight",{value:()=>a}),Object.defineProperty(a,"validate",{value:()=>{throw new Error("Cannot call validate() on the server")}}),o==null&&Object.defineProperty(a,"for",{value:u=>{const{state:i}=v(),l=m.id+"|"+JSON.stringify(u);let c=(i.form_instances??=new Map).get(l);return c||(c=r(u),c.__.id=`${m.id}/${encodeURIComponent(JSON.stringify(u))}`,c.__.name=m.name,i.form_instances.set(l,c)),c}}),a}return r()}function T(n,t,e,s){if(n.issues=t.map(r=>K(r,!0)),!e){n.input={};for(let r of s.keys()){if(/^[.\]]?_/.test(r))continue;const o=r.endsWith("[]"),a=s.getAll(r).filter(f=>typeof f=="string");o&&(r=r.slice(0,-2)),I(n.input,r,o?a:a[0])}}}function ee(){function n(...t){throw new D(t.map(e=>typeof e=="string"?{path:[],message:e}:e))}return new Proxy(n,{get(t,e){return typeof e=="symbol"?t[e]:q(e,(r,o=[])=>({message:r,path:o}),[])}})}class D extends Error{constructor(t){super("Validation failed"),this.name="ValidationError",this.issues=t}}function q(n,t,e){const s=[...e,n],r=o=>t(o,s);return new Proxy(r,{get(o,a){return typeof a=="symbol"?o[a]:/^\d+$/.test(a)?q(parseInt(a,10),t,s):q(a,t,s)}})}function fe(n,t,e){const s=typeof t=="function"?t:void 0,r=e??(s?void 0:t),o=s??n,a=E(n,s),f={type:"prerender",id:"",name:"",has_arg:!!s,inputs:r?.inputs,dynamic:r?.dynamic},m=u=>{const i=(async()=>{const{event:l,state:c}=v(),h=$(u,c.transport),p=f.id,d=`${V}/${H}/remote/${p}${h?`/${h}`:""}`;if(!c.prerendering&&!N&&!l.isRemoteRequest)try{return await O(f,u,c,async()=>{const b=$(u,c.transport),L=_(f,c),z=L[b]??=fetch(new URL(d,l.url.origin).href).then(async C=>{if(!C.ok)throw new Error("Prerendered response not found");const k=await C.json();return k.type==="error"&&j(k.status,k.error),k.result});return B(await z,c.transport)})}catch{}if(c.prerendering?.remote_responses.has(d))return c.prerendering.remote_responses.get(d);const y=O(f,u,c,()=>P(l,c,!1,u,a,o));c.prerendering&&c.prerendering.remote_responses.set(d,y);const w=await y;if(c.prerendering){const b={type:"result",result:J(w,c.transport)};c.prerendering.dependencies.set(d,{body:JSON.stringify(b),response:F(b)})}return w})();return i.catch(()=>{}),i};return Object.defineProperty(m,"__",{value:f}),m}function te(n,t){const e=t??n,s=E(n,t),r={type:"query",id:"",name:""},o=a=>{if(A)throw new Error(`Cannot call query '${r.name}' while prerendering, as prerendered pages need static data. Use 'prerender' from $app/server instead`);const{event:f,state:m}=v(),u=O(r,a,m,()=>P(f,m,!1,a,s,e));return u.catch(()=>{}),u.set=i=>{const{state:l}=v(),c=l.refreshes;if(!c)throw new Error(`Cannot call set on query '${r.name}' because it is not executed in the context of a command/form remote function`);if(r.id){const h=_(r,l),p=$(a,l.transport);c[x(r.id,p)]=h[p]=Promise.resolve(i)}},u.refresh=()=>{const{state:i}=v(),l=i.refreshes;if(!l)throw new Error(`Cannot call refresh on query '${r.name}' because it is not executed in the context of a command/form remote function`);const c=x(r.id,$(a,i.transport));return l[c]=u,u.then(()=>{})},u.withOverride=()=>{throw new Error(`Cannot call '${r.name}.withOverride()' on the server`)},u};return Object.defineProperty(o,"__",{value:r}),o}function re(n,t){const e=t??n,s=E(n,t),r={type:"query_batch",id:"",name:"",run:f=>{const{event:m,state:u}=v();return P(m,u,!1,f,i=>Promise.all(i.map(s)),e)}};let o={args:[],resolvers:[]};const a=f=>{if(A)throw new Error(`Cannot call query.batch '${r.name}' while prerendering, as prerendered pages need static data. Use 'prerender' from $app/server instead`);const{event:m,state:u}=v(),i=O(r,f,u,()=>new Promise((l,c)=>{o.args.push(f),o.resolvers.push({resolve:l,reject:c}),!(o.args.length>1)&&setTimeout(async()=>{const h=o;o={args:[],resolvers:[]};try{const p=await P(m,u,!1,h.args,d=>Promise.all(d.map(s)),e);for(let d=0;d<h.resolvers.length;d++)try{h.resolvers[d].resolve(p(h.args[d],d))}catch(y){h.resolvers[d].reject(y)}}catch(p){for(const d of h.resolvers)d.reject(p)}},0)}));return i.catch(()=>{}),i.refresh=async()=>{const{state:l}=v(),c=l.refreshes;if(!c)throw new Error(`Cannot call refresh on query.batch '${r.name}' because it is not executed in the context of a command/form remote function`);const h=x(r.id,$(f,l.transport));c[h]=await i},i.withOverride=()=>{throw new Error(`Cannot call '${r.name}.withOverride()' on the server`)},i};return Object.defineProperty(a,"__",{value:r}),a}Object.defineProperty(te,"batch",{value:re,enumerable:!0});export{ce as command,ue as form,fe as prerender,te as query};
